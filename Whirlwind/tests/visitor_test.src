struct Range {
	mul: int;
}

interf for Range {
	operator [](i: int) int
		=> i * this.mul;

	operator [](i: int, v: int) {
		this.mul += v;

		return i * this.mul;
	}
}

struct RangeList {
	lst: [Range];
}

interf for RangeList {
	func push(x: Range) {
		this.lst += [x];
	}

	operator[](i: int) Range
		=> this.lst[i];

	operator[](i: int, v: Range) {
		this.lst[i] = v;
	}
}

func main() {
	let (r1 = new Range(),
		r2 = new Range());

	let rl = new RangeList();

	rl.push(r1);

	rl[0][0] = 2;

	rl[0] = r2;
}